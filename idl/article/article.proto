syntax = "proto3";

package article;

option go_package = "article";

import "api.proto";
import "response.proto";
import "articleBasic.proto";
import "category.proto";

message GetArticleFeedReq {
  string req_id = 1;
  string cursor = 2;
  int32 limit = 3;
}

message GetArticleFeedRes {
  response.Status status = 1;
  repeated ArticlesInfo articles = 2;
}

message GetArticleReq {
  string req_id = 1;
  string article_id = 2[(api.path) = "article_id"];
}

message GetArticleRes {
  response.Status status = 1;
  ArticlesInfo article = 2;
}

message SearchArticleReq {
  string keyword = 1[(api.body) = "keyword"];
  int32 from = 2[(api.body) = "from"];
  int32 max_results = 3[(api.body) = "max_results"];
  string start_time = 4[(api.body) = "start_time"];
  string end_time = 5[(api.body) = "end_time"];

  string req_id = 6;
}

message SearchArticleRes {
  response.Status status = 1;
  repeated ArticlesInfo articles = 2;
}

message CategoriesReq {
  string req_id = 1;
}

message CategoriesResp {
  response.Status status = 1;
  repeated Category categories = 2;
}

service Article {
  rpc GetArticleFeed(GetArticleFeedReq) returns (GetArticleFeedRes){
    option (api.get) = "/feed";
  };
  rpc GetArticle(GetArticleReq) returns (GetArticleRes){
    option (api.get) = "/article/:article_id";
  };
  rpc SearchArticle(SearchArticleReq) returns (SearchArticleRes){
    option (api.get) = "/search";
  };
  rpc Category(CategoriesReq) returns(CategoriesResp){
    option(api.get) = "/category";
  };
}