syntax = "proto3";

package article;

option go_package = "article";

import "api.proto";
import "response.proto";
import "articleBasic.proto";
import "category.proto";
import "userBasic.proto";

message GetArticleFeedReq {
  string req_id = 1;
  string cursor = 2;
  int32 limit = 3;
}

message GetArticleFeedResp {
    response.Status status = 1;
    repeated ArticlesInfo articles = 2;
}

message GetArticleReq {
  string req_id = 1;
  string article_id = 2[(api.path) = "article_id"];
}

message GetArticleResp {
    response.Status status = 1;
    string content = 2;
    user.Basic author_info = 3;
    article.UserInteractionInfo interaction = 4;
}

message SearchArticleReq {
  string keyword = 1[(api.query) = "keyword"];
  int32 from = 2[(api.query) = "from"];
  int32 max_results = 3[(api.query) = "max_results"];
  string start_time = 4[(api.query) = "start_time"];
  string end_time = 5[(api.query) = "end_time"];

  string req_id = 6;
}

message SearchArticleResp {
    response.Status status = 1;
    repeated ArticlesInfo articles = 2;
}

message CategoriesReq {
  string req_id = 1;
}

message CategoriesResp {
    response.Status status = 1;
    repeated Category categories = 2;
}

service Article {
  rpc GetArticleFeed(GetArticleFeedReq) returns (GetArticleFeedResp){
    option (api.get) = "/feed";
  };
  rpc GetArticle(GetArticleReq) returns (GetArticleResp){
    option (api.get) = "/article/:article_id";
  };
  rpc SearchArticle(SearchArticleReq) returns (SearchArticleResp){
    option (api.get) = "/search";
  };
  rpc Category(CategoriesReq) returns(CategoriesResp){
    option(api.get) = "/category";
  };
}